<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!--
    Problem: 
      Maven3 does not evaluate external properties during the "ear:generate-application-xml" goal.
      
    Description:
      In projects with more than one developer each developer often has her/his own 
      requirements regarding how to set up the development environment: The targeted 
      application server is different, e.g. JBoos-4.3 vs JBoss-5, and the database 
      connection url is different for each developer - etc, etc.
      
      Targeting different environments often involves affecting properties in the
      project POMs. With this requirement we can not use Maven filters to read 
      properties into the POM; they are ony visible to resources and can not be
      accessed inside the POM.
      
      This is where the Properties Maven Plugin makes our life a little easier when 
      dealing with properties that we need to access inside our POM. It provides goals 
      to read and write properties from and to files, and also to set system properties. 
      It's main use-case is loading properties from files instead of declaring them in 
      pom.xml, something that comes in handy when dealing with different environments. 
      The plugin read properties during the "initialize" phase and the properties are 
      then accessible from the pom.
      
      The use-case above works perfectly in Maven2 and the ear:generate-application-xml 
      goal creates the jboss-app.xml.
      
      In Maven3 I get the following error message:
        [ERROR] Failed to execute goal 
        org.apache.maven.plugins:maven-ear-plugin:2.4.2:generate-application-xml 
        (default-generate-application-xml) on project mvn3-problem-ear: Failed to in
        itialize JBoss configuration: Invalid JBoss configuration, version[${as.version}] 
        is not supported. -> [Help 1]
      
      If I put the ${as.version} property placeholder inside Maven's property tag
      everything works ok in Maven3. 
  -->


  <modelVersion>4.0.0</modelVersion>
  <groupId>no.knowit.sandbox.loo</groupId>
  <artifactId>mvn3-problem-ear</artifactId>
  <version>0.1-SNAPSHOT</version>
  <name>${project.artifactId} : ${project.version}</name>
  <description>Maven3 does not evaluate external property placeholders in EAR plugin</description>
  <url>http://code.google.com/p/seam-maven-refimpl/</url>
  <packaging>ear</packaging>

  <properties>
    <env>dev</env> <!-- The default setting if no profile is specified -->

    <jdk>6</jdk>
    <jdk.debug>true</jdk.debug>
    <jdk.optimize>false</jdk.optimize>
    <jdk.source>1.6</jdk.source>
    <jdk.target>1.6</jdk.target>

    <!-- http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <!-- Properties externalized to "filter.properties"
    <app></app>
    <app.context>maven3-problem</app.context>
    <app.display.name>maven3-problem</app.display.name>
    <app.description>Maven3 does not evaluate external property placeholders in EAR plugin</app.description>
    
    <as>jboss423</as>
    <as.version>4.2</as.version>
    <as.home>./target/jboss-4.2.3.GA-jdk6</as.home>
    <as.deploy>${as.home}/server/default/deploy</as.deploy>

    <ds>hsqldb</ds>
    <ds.jndi.name>${app}Database</ds.jndi.name>
    <ds.database.name>${app}_db</ds.database.name>
    <ds.server.name></ds.server.name>
    <ds.driver.class>org.hsqldb.jdbcDriver</ds.driver.class>
    <ds.connection.url>jdbc:hsqldb:mem:${ds.database.name}</ds.connection.url>
    <ds.user.name>sa</ds.user.name>
    <ds.password></ds.password>
    <ds.hibernate.dialect>org.hibernate.dialect.HSQLDialect</ds.hibernate.dialect>
    <ds.xml>${app.context}-ds.xml</ds.xml>
    -->
    
    <!-- 
      The externalized "filter.properties" properties file.
      Copy this section to a file named "filter.properties" 
      and save it in the same directory as this POM before
      running this project.
      
    # Begin filter.properties
    app             =
    app.context     =maven3-problem
    app.display.name=maven3-problem
    app.description =Maven3 does not evaluate external property placeholders in EAR plugin

    # JBoss 4.2.3
    as        =jboss423
    as.version=4.2
    as.home   =./target/jboss-4.2.3.GA-jdk6
    as.deploy =${as.home}/server/default/deploy

    # Datasource
    ds                  =hsqldb
    ds.jndi.name        =${app}Database
    ds.database.name    =${app}_db
    ds.server.name      =
    ds.driver.class     =org.hsqldb.jdbcDriver
    ds.connection.url   =jdbc:hsqldb:mem:${ds.database.name}
    ds.user.name        =sa
    ds.password         =
    ds.hibernate.dialect=org.hibernate.dialect.HSQLDialect
    ds.xml              =${app.context}-ds.xml
    # End filter.properties 
    -->
  </properties>

  <build>
    <!--
      Maven filter properties are ony visible to
      resources and can not be accessed from the POM.
    
    <filters>
      <filter>./filter.properties</filter>
    </filters>
    -->
    
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.4.1</version>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.3.1</version>
          <configuration>
            <source>${jdk.source}</source>
            <target>${jdk.target}</target>
            <encoding>utf-8</encoding>
            <debug>${jdk.debug}</debug>
            <optimize>${jdk.optimize}</optimize>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>
              
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ear-plugin</artifactId>
          <version>2.4.2</version>
          <configuration>
            <!-- 
              MNGECLIPSE-1541:
              During the import of a mavenized ear project (File > Import... > General > Maven Projects) 
              an application.xml file is generated in src/main/application/META-INF/application.xml.
              https://issues.sonatype.org/browse/MNGECLIPSE-1541
              
              MNGECLIPSE-2145: 
              Generated application.xml doesn't contain final names
              https://issues.sonatype.org/browse/MNGECLIPSE-2145
              
              To fix this we excludes the eclipse generated application.xml during mvn package
            -->
            <earSourceExcludes>**/application.xml</earSourceExcludes>
            
            <!-- Use maven generated application.xml -->
            <generateApplicationXml>true</generateApplicationXml>
            
            <version>5</version>
            <defaultLibBundleDir>lib</defaultLibBundleDir>
            <encoding>UTF-8</encoding>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Build-Machine>${env.COMPUTERNAME}</Build-Machine>
                <Url>${project.url}</Url>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0-alpha-2</version>
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <executions>
          <execution>
          	<configuration>
              <files>
                <file>./filter.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>		

      <!-- Maven EAR plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ear-plugin</artifactId>
        <configuration>
          <finalName>${app.context}-ear</finalName>
          <displayName>${app.display.name}</displayName>
          <description>${app.description}</description>
          
          <jboss>
            <version>${as.version}</version>
            <loader-repository>seam.jboss.org:loader=${app.context}-ear</loader-repository>
            <data-sources>
              <data-source>${ds.xml}</data-source>
            </data-sources>
          </jboss>
          
          <archive>
            <manifestEntries>
              <Mode>${env}</Mode>
            </manifestEntries>
          </archive>
          
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
