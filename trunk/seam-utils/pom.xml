<?xml version="1.0" encoding="UTF-8"?>
<project 
  xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>no.knowit.seam</groupId>
    <artifactId>root</artifactId>
    <version>2.2.1-SNAPSHOT</version>
    <relativePath></relativePath> <!-- To avoid m3 warning -->
  </parent>
  
  <groupId>no.knowit.seam</groupId>
  <artifactId>seam-utils</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>${project.artifactId} : ${project.version}</name>
  <description>seam-refimpl utilities</description>
  <packaging>pom</packaging>
  
  <modules>
    <module>seam-utils-ejb</module>
    <module>seam-utils-openejb</module>
    <module>seam-utils-tests</module>
  </modules>
  
  <properties>
    <env>dev</env> <!-- The default setting if no profile is specified -->
    
    <app>utils</app>
    <app.context>seam-utils</app.context>  <!-- hint: same value as artifactId -->
    <app.jndi.pattern>${app.context}-ear/#{ejbName}/local</app.jndi.pattern>
    <app.jndi.pattern.test>/#{ejbName}/Local</app.jndi.pattern.test>
    
    <!-- 
      Properties for production are located in src/main/filters/filter-prod.properties
      Properties to be modified by developer are located in src/main/filters/filter-dev.properties
      Remember to add "filter-dev.properties" to svn:ignore 
    -->
  </properties>

  <profiles>
    <profile>
      <!-- e.g: mvn initialize -Pshow-properties -->
      <id>show-properties</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <executions>
              <execution>
                <id>g-show-properties</id>
                <phase>initialize</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                  <![CDATA[
                    def profiles = project.getActiveProfiles();
                    log.info "========================================================================"
                    log.info "Active profiles:"
                    log.info "========================================================================"
                    if(profiles.size > 0) {
                      profiles.each{ profile ->
                        log.info profile.id;
                      }
                    }
                    else {
                      log.info "No active profiles"
                    }
                    
                    // Pattern to match ${property} placeholders
                    def placeholderPattern = ~/\$\{(.*?)\}/;  
                    log.info ""
                    log.info "========================================================================"
                    log.info "Maven project.properties:"
                    log.info "========================================================================"
                    if (project.parent) log.info "project.parent.basedir  = $project.parent.basedir";
                    log.info "project.basedir         = $project.basedir";
                    log.info "project.artifactId      = $project.artifactId";
                    log.info "project.build.directory = $project.build.directory";
                    log.info "project.build.finalName = $project.build.finalName";
                    
                    project.properties.sort{it.key}.each { key, value ->
                      def matcher = placeholderPattern.matcher(value);
                      if(matcher)
                        log.warn "NON EXISTING PROPERTY IN PLACEHOLDER: $key = $value"
                      else
                        log.info "$key = $value";
                    }
                    log.info "========================================================================"
                  ]]>
                  </source>
                </configuration>                
              </execution>
            </executions>
          </plugin>        
        </plugins>
      </build>
    </profile>
  </profiles>
      
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>no.knowit.seam</groupId>
        <artifactId>seam-utils-ejb</artifactId>
        <version>${project.version}</version>
        <type>ejb</type>
      </dependency>
      
      <dependency>
        <groupId>no.knowit.seam</groupId>
        <artifactId>seam-utils-openejb</artifactId>
        <version>${project.version}</version>
        <type>ejb</type>
      </dependency>

      <dependency>
        <groupId>no.knowit.seam</groupId>
        <artifactId>seam-utils-tests</artifactId>
        <version>${project.version}</version>
        <type>ejb</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- 
    All provided, shared and test dependencies goes into parent pom 
  -->
  <dependencies>
  
    <!-- seam -->
    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam</artifactId>
      <scope>provided</scope>
      <type>ejb</type>
    </dependency>

    <dependency>
      <groupId>org.jboss.el</groupId>
      <artifactId>jboss-el</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- richfaces -->
    <dependency>
      <groupId>org.richfaces.framework</groupId>
      <artifactId>richfaces-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- hibernate -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
  
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- jee -->
    <dependency>
      <groupId>javax.ejb</groupId>
      <artifactId>ejb-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>el-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>jsf-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms</artifactId>
      <scope>provided</scope>
    </dependency>		
    
    <!-- commons -->
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- log4j -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>provided</scope>
    </dependency>	

    <!-- ******** TEST DEPENDECIES ********	-->
    
    <!-- spec apis such as javax.persistence -->
    <dependency>
      <groupId>org.apache.openejb</groupId>
      <artifactId>javaee-api</artifactId>
      <scope>test</scope>
    </dependency>
  
    <!-- OpenEJB embedded container for running tests -->
    <dependency>
      <groupId>org.apache.openejb</groupId>
      <artifactId>openejb-core</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- logging, for OpenEJB -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- For in-memory database -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- databases  -->
    <!--
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    -->
    
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>
    
    <!-- 
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>test</scope>
    </dependency>
    -->
    
    <!-- unit test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <scope>test</scope>
    </dependency>
    
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>
  </build>
</project>
