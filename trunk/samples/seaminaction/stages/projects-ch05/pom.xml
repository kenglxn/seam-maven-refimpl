<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>no.knowit.seam</groupId>
    <artifactId>root</artifactId>
    <version>2.2.0-SNAPSHOT</version>
  </parent>

	<groupId>org.open18.seaminaction</groupId> 
	<artifactId>open18-stages-ch05</artifactId> <!-- m2eclipse does not like: ${app.context}-ear -->
	<name>${project.artifactId} : ${project.version}</name>
	<version>2.2.0-SNAPSHOT</version>
	<description>Open18 stages ch05 parent POM</description>
  <url>http://code.google.com/p/seam-maven-refimpl/</url>
  <packaging>pom</packaging>

  <modules>
		<module>model</module>
		<module>action</module>
		<module>war</module>
		<module>ear</module>
  </modules>

  <properties>
    <env>dev</env> <!-- The default setting if no profile is specified -->
		<app>open18-ch05</app>
		<app.context>open18-stages-ch05</app.context>  <!-- hint: same value as artifactId -->
		<app.web.context>open18-ch05</app.web.context>
		<app.display.name>Seam In Action open18-ch05</app.display.name>
		<app.description>
			This project is built using the seam-refimpl Maven template. Original source code: 
			http://seaminaction.googlecode.com/svn/trunk/stages/projects-ch05
		</app.description>
    <app.distributable>false</app.distributable>
    <app.jndi.pattern>${app.context}-ear/#{ejbName}/local</app.jndi.pattern> <!-- JBoss JNDI Pattern -->
    <app.jndi.pattern.test>/#{ejbName}/Local</app.jndi.pattern.test>         <!-- OpenEJB JNDI Pattern -->

    <!-- 
      Properties for production are located in src/main/filters/filter-prod.properties
      Properties to be modified by developer are located in src/main/filters/filter-dev.properties
      Copy filter-prod.properties to filter-dev.properties and add filter-dev.properties to svn:ignore
      Type e.g "mvn install -Penv-dev" to activate the development profile.  
    -->
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- project modules -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>${app.context}-ear</artifactId>
				<version>${project.version}</version>
				<type>ear</type>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>${app.context}-model</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>${app.context}-action</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>${app.context}-war</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>
		</dependencies>
  </dependencyManagement>

  <!-- All provided, shared and test dependencies goes into parent pom -->
  <dependencies>
    
    <!-- seam -->
    <dependency>
      <groupId>org.jboss.seam</groupId>
      <artifactId>jboss-seam</artifactId>
      <scope>provided</scope>
      <type>ejb</type>
    </dependency>

    <dependency>
      <groupId>org.jboss.el</groupId>
      <artifactId>jboss-el</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- richfaces -->
    <dependency>
      <groupId>org.richfaces.framework</groupId>
      <artifactId>richfaces-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- hibernate -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- jee -->
    <dependency>
      <groupId>javax.ejb</groupId>
      <artifactId>ejb-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.el</groupId>
      <artifactId>el-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>jsf-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms</artifactId>
      <scope>provided</scope>
    </dependency>		
    
    <!-- commons -->
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- log4j -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>provided</scope>
    </dependency>


  </dependencies>

  <profiles>
    <profile>
      <id>show-properties</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <echo>env                       : ${env}</echo>
                    <echo>app.context               : ${app.context}</echo>
                    <echo>app.unpack.modules        : ${app.unpack.modules}</echo>
                    <echo>project.parent.basedir    : ${project.parent.basedir}</echo>
                    <echo>project.basedir           : ${project.basedir}</echo>
                    <echo>jdk.source                : ${jdk.source}</echo>
                    <echo>jdk.target                : ${jdk.target}</echo>
                    <echo>jdk.debug                 : ${jdk.debug}</echo>
                    <echo>jdk.optimize              : ${jdk.optimize}</echo>
                    <echo>as                        : ${as}</echo>
                    <echo>as.version                : ${as.version}</echo>
                    <echo>as.deploy                 : ${as.deploy}</echo>
                    <echo>ds                        : ${ds}</echo>
                    <echo>ds.connection.url         : ${ds.connection.url}</echo>
                    <echo>ds.xml                    : ${ds.xml}</echo>
                    <echo>pu.hibernate.dialect      : ${pu.hibernate.dialect.test}</echo>
                    <echo>pu.hibernate.show_sql     : ${pu.hibernate.show_sql}</echo>										
                    <echo>ds.test                   : ${ds.test}</echo>
                    <echo>ds.connection.url.test    : ${ds.connection.url.test}</echo>
                    <echo>pu.hibernate.dialect.test : ${pu.hibernate.dialect.test}</echo>
                    <echo>pu.hibernate.show_sql.test: ${pu.hibernate.show_sql.test}</echo>										
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${jdk.source}</source>
          <target>${jdk.target}</target>
          <encoding>utf-8</encoding>
          <debug>${jdk.debug}</debug>
          <optimize>${jdk.optimize}</optimize>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <scm>
    <connection>scm:svn:http://seam-maven-refimpl.googlecode.com/svn/trunk</connection>
    <developerConnection>scm:svn:https://seam-maven-refimpl.googlecode.com/svn/trunk</developerConnection>
    <url>http://code.google.com/p/seam-maven-refimpl/source/browse/#svn/trunk</url>
  </scm>
</project>